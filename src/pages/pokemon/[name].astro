---
import BaseStats from '../../components/BaseStats.astro'
import PokemonsType from '../../components/PokemonsType.astro'
import Layout from '../../layouts/Layout.astro'
import {getAllPokedex, getPokemonByName} from '../../lib/api'
import {type Result} from '../../types/API-pokedex'

export async function getStaticPaths() {
  const pokedex = await getAllPokedex()
  return pokedex.results.map((pokemon: Result) => ({
    params: {name: pokemon.name},
  }))
}

const name = (Astro.params).name

if (name === undefined) {Astro.redirect('/404')}
const pokemon = await getPokemonByName(name || 'undefined')
---

<Layout title={`Pokemon Web Page | ${pokemon.name[0].toUpperCase()}${pokemon.name.slice(1)}`}>
  <main class="py-1 px-2 w-screen">
    <article class="px-3 grid justify-center py-3">
      <div class="flex flex-col text-center">
        <h1 class="text-6xl font-bold">{`${pokemon.name[0].toUpperCase()}${pokemon.name.slice(1)}`}</h1>
        <img class="mx-auto w-80" src={pokemon.sprites?.other?.['official-artwork']?.front_default} alt=`Pokemon: ${pokemon.name}` loading="lazy">
        <article class="m-2 flex gap-2 justify-center">
          {
            pokemon.types.map((type) => (
              <PokemonsType type={type.type.name} />
            ))
          }
        </article>
        <h1 class=" text-lg"><strong>Height </strong>{pokemon.height / 10}m</h1>
        <h1 class=" text-lg"><strong>Weight </strong>{pokemon.weight / 10}kg</h1>
      </div>
      <BaseStats pokemon={pokemon}/>
      <div class="flex gap-20 justify-center my-2">
      {
        pokemon.abilities.map(ability => (
          <h1 class="text-xl font-semibold">{`${ability.ability?.name[0].toUpperCase()}${ability.ability?.name.slice(1)}`}</h1>  
        ))
      }
      </div>
    </article>
  </main>
</Layout>
